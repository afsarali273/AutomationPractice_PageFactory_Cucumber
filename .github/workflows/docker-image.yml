name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-java@v2
       with:
        java-version: '11'
        distribution: 'adopt'
     - run: mvn clean package -DskipTests
     - uses: actions/upload-artifact@v2
       with:
        name: artifacts
        path: deployment
        retention-days: 1

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: artifacts
          path: deployment  

      - name: Docker build
        run: |
          cd ./deployment
          docker build -t automation-image .
          mkdir -p image
          docker save automation-image > ./image/automation-image.tar

      - uses: actions/upload-artifact@v2
        with:
         name: dockerimage
         path: ./deployment/image/automation-image.tar  
         retention-days: 1
         

  test:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dockerimage
          path: ./deployment/image    

      - name: Run Tests
        run: |
          cd deployment
          pwd
          ls -ltr
          docker load --input image/automation-image.tar
          docker network create automation_network || true
          docker pull selenium/standalone-chrome:3.141.59-20200525
          docker run --shm-size=2g -d --network automation_network --name seleniumchrome --network-alias seleniumchrome selenium/standalone-chrome:3.141.59-20200525
          docker ps
          if [[ ! -d "./test_results" ]]; then mkdir test_results; chmod 755 test_results; fi;

          docker run -e isRemoteExecution="true" --network automation_network --volume "$(pwd)"/test_results:/app/test_results --name automation automation-image --plugin json:test_results/cucumber-reports/cucumber-1.json
          docker cp automation:/app/test_results/. ./test_results
      - uses: actions/upload-artifact@v2
        with:
         name: artifacts
         path: test_results  